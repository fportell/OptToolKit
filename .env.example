# OpsToolKit - Integrated Tools Platform Environment Configuration
# Copy this file to .env and fill in your values

# ============================================================================
# Authentication (per FR-001, FR-002)
# ============================================================================
APP_USERNAME=admin
APP_PASSWORD=ChangeThisSecurePassword123!

# Flask Session Secret (generate with: python -c "import secrets; print(secrets.token_hex(32))")
SESSION_SECRET=your-secret-key-here-change-this

# ============================================================================
# Session Management (per FR-003, clarifications)
# ============================================================================
# Session timeout: 4 hours of activity OR 30 minutes of inactivity
SESSION_ACTIVITY_TIMEOUT=14400  # 4 hours in seconds
SESSION_INACTIVITY_TIMEOUT=1800  # 30 minutes in seconds

# ============================================================================
# OpenAI API Configuration (per FR-006, FR-008, FR-009)
# ============================================================================
OPENAI_API_KEY=sk-your-openai-api-key-here

# OpenAI Models (optional, defaults shown)
SUMMARY_REVISION_MODEL=gpt-4.1
DR_TRACKER_MODEL=gpt-4.1
CHATBOT_MODEL=gpt-4.1

# ============================================================================
# Concurrency Control (per FR-016, clarifications)
# ============================================================================
MAX_CONCURRENT_USERS=5
OPENAI_QUEUE_ENABLED=true

# ============================================================================
# File Upload Limits (per FR-009, clarifications)
# ============================================================================
MAX_UPLOAD_SIZE_MB=10
DR_TRACKER_TIMEOUT_SECONDS=120  # 2 minutes

# ============================================================================
# Flask Configuration
# ============================================================================
FLASK_APP=app
FLASK_ENV=development  # Change to 'production' for deployment
FLASK_DEBUG=true  # Set to false in production

# Server Configuration
FLASK_HOST=0.0.0.0
FLASK_PORT=5000

# ============================================================================
# RSS Manager Configuration
# ============================================================================
RSS_DATABASE_PATH=app/data/rss_subscriptions.db

# ============================================================================
# Session Storage Backend (optional)
# ============================================================================
# Options: filesystem, redis
SESSION_TYPE=null

# If using Redis (optional, per T260)
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_DB=0

# ============================================================================
# Logging Configuration
# ============================================================================
LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FILE=logs/opstoolkit.log

# ============================================================================
# Development Tools (per constitution compliance)
# ============================================================================
ENABLE_MYPY=true
ENABLE_PYTEST_COV=true
COVERAGE_THRESHOLD=80

# ============================================================================
# Security (per constitution and plan.md)
# ============================================================================
HTTPS_ENABLED=false  # Set to true in production
SECURE_COOKIES=false  # Set to true when HTTPS_ENABLED=true
RATE_LIMIT_LOGIN=5  # Login attempts per minute
RATE_LIMIT_AI_OPERATIONS=20  # AI operations per minute

# ============================================================================
# Data Asset Paths (optional - defaults shown)
# ============================================================================
GEOLOCATION_DB_PATH=app/services/geolocation/data/geolocations_db.tsv
CHATBOT_KNOWLEDGE_BASE_PATH=app/data/chatbot/DR_database_PBI.xlsx
DR_TRACKER_DATA_PATH=app/data/dr_tracker/

# ============================================================================
# DR-Tracker Configuration
# ============================================================================
DR_TRACKER_TIMEOUT=120                    # OpenAI timeout in seconds
DR_TRACKER_MAX_FILE_SIZE=5242880          # 5MB in bytes
DR_TRACKER_SESSION_TIMEOUT=7200           # 2 hours
DR_TRACKER_VBA_PATH=app/data/dr_tracker/vbaProject.bin

# Chatbot Configuration
CHATBOT_UPLOAD_TIMEOUT=6000               # 10 minutes for large uploads
CHATBOT_BATCH_THRESHOLD=2000              # Use batch API for 2000+ chunks

# ============================================================================
# Deployment Instructions
# ============================================================================
#
# To deploy OpsToolKit to a new server:
#
# 1. Clone the repository:
#    git clone <your-repo-url>
#    cd OpsToolKit
#
# 2. Copy environment template:
#    cp .env.example .env
#
# 3. Generate secure session secret:
#    python -c "import secrets; print(secrets.token_hex(32))"
#    # Copy output to SESSION_SECRET in .env
#
# 4. Update .env file with your credentials:
#    - APP_USERNAME and APP_PASSWORD
#    - OPENAI_API_KEY (from https://platform.openai.com/api-keys)
#    - SESSION_SECRET (from step 3)
#
# 5. Create virtual environment and install dependencies:
#    python3 -m venv venv
#    source venv/bin/activate  # On Windows: venv\Scripts\activate
#    pip install -r requirements.txt
#
# 6. Create required directories:
#    mkdir -p logs flask_session
#
# 7. For production deployment:
#    - Set FLASK_ENV=production
#    - Set FLASK_DEBUG=false
#    - Set HTTPS_ENABLED=true
#    - Set SECURE_COOKIES=true
#    - Use a proper WSGI server (gunicorn, uwsgi)
#
# 8. Run the application:
#    # Development:
#    python app.py
#
#    # Production (with gunicorn):
#    gunicorn -w 4 -b 0.0.0.0:5000 wsgi:app
#
# 9. The following will be auto-generated on first run:
#    - app/data/chatbot/chroma_db/ (vector store, regenerated from Excel)
#    - flask_session/ (session data)
#    - logs/ (application logs)
#
# ==============================================================================
